#!/usr/bin/env zsh

# Set up a macOS development environment

separator() {
  echo "\n\n------------------\n"
}

# Install Xcode command line tools
xcode-select -p &>/dev/null || { echo "$(separator) Install Xcode command line tools"; xcode-select --install; }

# Install Homebrew
command -v brew &> /dev/null || { echo "$(separator) Install Homebrew"; /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; }

# Clone dotfiles and scripts repos
[ ! -d "$HOME/scripts" ] && echo "$(separator) Clone scripts" && gh repo clone peterlopez/scripts ~/scripts
[ ! -d "$HOME/dotfiles" ] && echo "$(separator) Clone dotfiles" && gh repo clone peterlopez/dotfiles ~/dotfiles

echo "$(separator) Install Homebrew packages"
brew bundle install

# Install Oh My Zsh (do before dotfiles)
[ ! -f "$HOME/.oh-my-zsh/oh-my-zsh.sh" ] && { echo "$(separator) Install Oh My Zsh"; sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"; }

echo "$(separator) Set up dotfiles"
~/scripts/shell/setup-dotfiles ~/dotfiles

echo "$(separator) Set macOS preferences"
~/scripts/shell/set-mac-preferences

echo "$(separator) Set Mac file associations"
~/scripts/shell/set-mac-file-associations

# Install GitHub CLI
command -v gh &> /dev/null || { echo "$(separator) Install GitHub CLI"; brew install gh; }

# Set up GitHub CLI
if ! gh auth status &> /dev/null; then
    echo "$(separator) Set up GitHub CLI"
    gh auth login
    gh auth setup-git
fi


# echo "$(separator) Set up keychain for SSH key"
# SSH_KEY_NAME="id_rsa"
# if [ ! -f ~/.ssh/$SSH_KEY_NAME ]; then
#     echo "Error: unable to setup keychain for SSH key. Make sure the file at ~/.ssh/$SSH_KEY_NAME exists."
#     exit 1
# else
#     ssh-add --apple-use-keychain ~/.ssh/$SSH_KEY_NAME
# fi

# Reboot
echo "Restart? (y/n) \c"
read confirm
[ "$confirm" = "y" ] && sudo shutdown -h now
