#!/bin/zsh

# Set up a macOS development environment

separator() {
  echo "\n\n------------------\n"
}

# Install Xcode command line tools
xcode-select -p &>/dev/null || { echo "$(separator) Install Xcode command line tools"; xcode-select --install; }

# Install Homebrew
command -v brew &> /dev/null || { echo "$(separator) Install Homebrew"; /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; }

echo "$(separator) Install Homebrew packages"
HOMEBREW_CASK_OPTS="--appdir=/Applications" brew bundle --file=/Users/peter/dotfiles/brew/system/Brewfile
HOMEBREW_CASK_OPTS="--appdir=/Users/peter/Applications" brew bundle --file=/Users/peter/dotfiles/brew/user/Brewfile

echo "$(separator) Set up GitHub CLI"
gh auth login
gh auth setup-git

echo "$(separator) Clone scripts"
gh repo clone peterlopez/scripts ~/scripts

echo "$(separator) Clone dotfiles"
gh repo clone peterlopez/dotfiles ~/dotfiles

echo "$(separator) Set up dotfiles"
~/scripts/shell/setup-dotfiles ~/dotfiles

echo "$(separator) Set macOS preferences"
~/scripts/shell/set-mac-preferences

echo "$(separator) Set Mac file associations"
~/scripts/shell/set-mac-file-associations

# Install Oh My Zsh
[ ! -d "$HOME/.oh-my-zsh" ] && { echo "$(separator) Install Oh My Zsh"; sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"; }

# echo "$(separator) Set up keychain for SSH key"
# SSH_KEY_NAME="id_rsa"
# if [ ! -f ~/.ssh/$SSH_KEY_NAME ]; then
#     echo "Error: unable to setup keychain for SSH key. Make sure the file at ~/.ssh/$SSH_KEY_NAME exists."
#     exit 1
# else
#     ssh-add --apple-use-keychain ~/.ssh/$SSH_KEY_NAME
# fi

# Reboot
read -p "Restart? (y/n) " confirm && [ "$confirm" = "y" ] && sudo shutdown -r now
