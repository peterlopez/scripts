#!/usr/bin/env ruby
#
# Deploys all files from a bare Git repository (git init --bare)
# to DEPLOY_PATH given a git branch matching DEPLOY_BRANCH
#
# SETUP:
#   - DEPLOY_PATH must be initalized as a regular git repo with a work tree
#     (i.e. run `git init` there first)
#
# USAGE
# 	1. put this file in a bare git repo's `hooks/` directory
#   2. set DEPLOY_BRANCH
#   3. set DEPLOY_PATH
#
# IMPORTANT:
#   - this file must be named 'post-receive'
#   - this file must be executable by user running git


# TODO - specify which branch should be deployed
DEPLOY_BRANCH = "test"

# TODO - specify where files should be deployed to
DEPLOY_PATH = "/srv/burlingameengineers.com"

# -----------------------

# read args from STDIN: "from_commit, to_commit, branch_name"
from, to, branch = ARGF.read.split " "

# only deploy specified branch
unless (branch == "refs/heads/"+DEPLOY_BRANCH)
  puts "!~!~!~!~!~!~!~!~!~!~!"
  puts "    Received ref(#{to}) on branch '#{branch}'."
  puts "    Warning! This branch will not be deployed."
  puts "!~!~!~!~!~!~!~!~!~!~!"
  exit
end

# use the following code below to set DEPLOY_PATH
# to be based on curren't directory's name
#
# dirname = File.basename(File.expand_path("../", Dir.pwd))

unless Dir.exists?(DEPLOY_PATH)
  puts "!~!~!~!~!~!~!~!~!~!~!"
  puts "    FAILED Deployment of ref(#{to}) to branch '#{branch}'!"
  puts "    Check that the directory set by 'DEPLOY_PATH' exists in hooks/post-receive."
  puts "!~!~!~!~!~!~!~!~!~!~!"
  exit 1
end

puts "===================="
puts "    Deploying ref #{to} on branch '#{DEPLOY_BRANCH}' to #{DEPLOY_PATH}..."

# deploy files
# by checking out branch with `--work-tree` arg
`git --work-tree=#{DEPLOY_PATH} checkout -f #{DEPLOY_BRANCH}`

puts "===================="
